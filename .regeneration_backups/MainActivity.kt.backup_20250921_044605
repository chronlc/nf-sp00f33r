package com.mag_sp00f.app.ui

import android.content.Intent
import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.Fragment
import com.google.android.material.bottomnavigation.BottomNavigationView
import com.mag_sp00f.app.R
import com.mag_sp00f.app.ui.fragments.HomeFragment
import com.mag_sp00f.app.ui.cardreading.CardReadingActivity
import com.mag_sp00f.app.ui.emulation.EmulationActivity

class MainActivity : AppCompatActivity() {
    
    private lateinit var bottomNavigation: BottomNavigationView

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        
        setupBottomNavigation()
        
        // Load default fragment
        if (savedInstanceState == null) {
            loadFragment(HomeFragment())
            bottomNavigation.selectedItemId = R.id.nav_home
        }
    }

    private fun setupBottomNavigation() {
        bottomNavigation = findViewById(R.id.bottom_navigation)
        bottomNavigation.setOnItemSelectedListener { item ->
            when (item.itemId) {
                R.id.nav_home -> {
                    loadFragment(HomeFragment())
                    true
                }
                R.id.nav_emulation -> {
                    navigateToEmulation()
                    true
                }
                R.id.nav_card_reading -> {
                    navigateToCardReading()
                    true
                }
                R.id.nav_hardware -> {
                    // Navigate to hardware fragment/activity (future)
                    true
                }
                R.id.nav_logs -> {
                    // Navigate to logs fragment/activity (future)
                    true
                }
                R.id.nav_fuzzer -> {
                    // Navigate to fuzzer fragment/activity (future)
                    true
                }
                R.id.nav_settings -> {
                    // Navigate to settings fragment/activity (future)
                    true
                }
                else -> false
            }
        }
    }

    private fun loadFragment(fragment: Fragment) {
        supportFragmentManager.beginTransaction()
            .replace(R.id.fragment_container, fragment)
            .commit()
    }
    
    fun navigateToCardReading() {
        startActivity(Intent(this, CardReadingActivity::class.java))
    }
    
    fun navigateToEmulation() {
        startActivity(Intent(this, EmulationActivity::class.java))
    }
    
    fun navigateToDatabase() {
        // TODO: Create Database Activity
        // startActivity(Intent(this, DatabaseActivity::class.java))
    }
}
